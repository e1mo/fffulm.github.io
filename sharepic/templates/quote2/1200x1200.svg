<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"

     viewBox="0 0 1200 1200"
     version="1.1">



  <g class="main">
    <image v-if="typeof backgroundImage == 'object'" v-bind:xlink:href="backgroundImage.value" v-fitimage v-bind:data-image-pos="pos" style="transform-origin: 50% 50%;" />

    <defs>
      <radialGradient id="gradient1">
        <stop offset="30%"   stop-color="#ffffff" stop-opacity="1"/>
        <stop offset="80%" stop-color="#000000" stop-opacity="1"/>
      </radialGradient>

      <mask id="mask4" x="-1200" y="-1000" width="2400" height="2400" >
        <rect x="-1000" y="-800"  width="2400" height="2400"
            style="stroke:none; fill: url(#gradient1)"/>
      </mask>
    </defs>

    <image xlink:href="sharepic/templates/quote2/logo.svg" x="-1000" y="-800" height="2200" width="2200" mask="url(#mask4)" />



    <g style="transform-origin: 50px 50px;" v-dynamic data-dynamic-origin="none" data-dynamic-width="950" data-dynamic-height="850">
      <g v-for="line in title">
        <text alignment-baseline="middle" x="75" fill="#fff" v-bind:y="22.5 + 130 + 190 * (title.indexOf(line) + 0)" style="font-size: 150px; font-family: 'Jost', 'Helvetica Neue'; text-shadow: 0px 0px 15px rgba(0, 0, 0, 1);">
          {{ line }}
        </text>
      </g>
    </g>

    <g style="transform-origin: 80px 1200px;" v-dynamic data-dynamic-origin="0% 0%" data-dynamic-width="1000" data-dynamic-height="500" style="transform-origin: 50px 180px;">
      <text  alignment-baseline="hanging" x="80" fill="#fff" v-bind:y="50 + (50 + 190 * title.length) * Math.min(...[850 / (50 + 190 * title.length), (1200 - 100) / Math.max(...title.map(line => textInfo(line, { fontFamily: 'Jost', fontSize: '150px' }).width + 40))]) + 85 * subtitle.indexOf(line)" style="font-size: 85px; font-family: 'Jost-400', 'Helvetica Neue', 'Helvetica'; text-shadow: 0px 0px 5px rgba(0, 0, 0, 1);" v-for="line in subtitle">
        {{ line }}
      </text>
    </g>

    <defs>
      <filter id="dropshadow" height="130%">
        <feGaussianBlur in="SourceAlpha" stdDeviation="7"/> <!-- stdDeviation is how much to blur -->
        <feOffset dx="0" dy="10" result="offsetblur"/> <!-- how much to offset -->
        <feComponentTransfer>
          <feFuncA type="linear" slope="0.6"/> <!-- slope is the opacity of the shadow -->
        </feComponentTransfer>
        <feMerge>
          <feMergeNode/> <!-- this contains the offset blurred image -->
          <feMergeNode in="SourceGraphic"/> <!-- this contains the element that the filter is applied to -->
        </feMerge>
      </filter>
    </defs>

    <image v-bind:xlink:href="typeof logo == 'object' ? logo.value : logo" x="995" y="995" height="180" width="180" filter="url(#dropshadow)" />
  </g>


</svg>
